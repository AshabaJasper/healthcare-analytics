{
  "version": 3,
  "sources": ["../../../app/routes/calculate-metrics.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\calculate-metrics.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\calculate-metrics.tsx\");\n  import.meta.hot.lastModified = \"1742375782115.4473\";\n}\n// REMIX HMR END\n\nimport { json } from \"@remix-run/node\";\nimport { useLoaderData, Link } from \"@remix-run/react\";\nimport { prisma } from \"~/lib/prisma.server\";\nimport Layout from \"~/components/Layout\";\nimport { calculateAndStoreAllMetrics } from \"~/services/metricsService.server\";\nexport async function loader({\n  request\n}) {\n  // Check if we have claim records\n  const claimCount = await prisma.claimRecord.count();\n\n  // Get unique LOC values\n  const locGroups = await prisma.claimRecord.groupBy({\n    by: ['LOC'],\n    where: {\n      LOC: {\n        not: null\n      }\n    }\n  });\n  const locValues = locGroups.map(g => g.LOC);\n\n  // Check metrics table\n  const metricsCount = await prisma.calculatedMetrics.count();\n\n  // Get the actual metrics if any exist\n  const metrics = await prisma.calculatedMetrics.findMany();\n\n  // If the request includes a trigger parameter, calculate metrics\n  const url = new URL(request.url);\n  const trigger = url.searchParams.get(\"trigger\");\n  let calculationResult = null;\n  if (trigger === \"true\") {\n    try {\n      // Recalculate all metrics\n      const count = await calculateAndStoreAllMetrics();\n      calculationResult = {\n        success: true,\n        count,\n        message: `Successfully calculated metrics for ${count} LOC groups.`\n      };\n    } catch (error) {\n      calculationResult = {\n        success: false,\n        message: `Error calculating metrics: ${error instanceof Error ? error.message : \"Unknown error\"}`\n      };\n    }\n  }\n  return json({\n    claimCount,\n    locValues,\n    metricsCount,\n    metrics,\n    calculationResult\n  });\n}\nexport default function CalculateMetrics() {\n  _s();\n  const {\n    claimCount,\n    locValues,\n    metricsCount,\n    metrics,\n    calculationResult\n  } = useLoaderData();\n  return <Layout>\r\n      <div className=\"max-w-7xl mx-auto\">\r\n        <h1 className=\"text-3xl font-bold text-gray-900 mb-6\">Metrics Calculation</h1>\r\n        \r\n        <div className=\"bg-white shadow-md rounded-lg p-6 mb-6\">\r\n          <h2 className=\"text-xl font-semibold text-gray-800 mb-4\">Database Status</h2>\r\n          <ul className=\"space-y-2 mb-4\">\r\n            <li><strong>Total Claim Records:</strong> {claimCount}</li>\r\n            <li><strong>LOC Values Found:</strong> {locValues.join(\", \") || \"None\"}</li>\r\n            <li><strong>Metrics Records:</strong> {metricsCount}</li>\r\n          </ul>\r\n          \r\n          <div className=\"mt-4\">\r\n            <Link to=\"/calculate-metrics?trigger=true\" className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\">\r\n              Calculate Metrics Now\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        \r\n        {calculationResult && <div className={`p-4 mb-6 rounded-md ${calculationResult.success ? 'bg-green-50' : 'bg-red-50'}`}>\r\n            <div className=\"flex\">\r\n              <div className=\"flex-shrink-0\">\r\n                {calculationResult.success ? <svg className=\"h-5 w-5 text-green-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                    <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\r\n                  </svg> : <svg className=\"h-5 w-5 text-red-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                    <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\r\n                  </svg>}\r\n              </div>\r\n              <div className=\"ml-3\">\r\n                <h3 className={`text-sm font-medium ${calculationResult.success ? 'text-green-800' : 'text-red-800'}`}>\r\n                  {calculationResult.success ? 'Success!' : 'Error!'}\r\n                </h3>\r\n                <div className={`mt-2 text-sm ${calculationResult.success ? 'text-green-700' : 'text-red-700'}`}>\r\n                  <p>{calculationResult.message}</p>\r\n                </div>\r\n                <div className=\"mt-4\">\r\n                  <div className=\"-mx-2 -my-1.5 flex\">\r\n                    <Link to=\"/dashboard\" className=\"bg-green-50 px-2 py-1.5 rounded-md text-sm font-medium text-green-800 hover:bg-green-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500\">\r\n                      Go to Dashboard\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>}\r\n        \r\n        {metricsCount > 0 && <div className=\"bg-white shadow-md rounded-lg p-6\">\r\n            <h2 className=\"text-xl font-semibold text-gray-800 mb-4\">Current Metrics</h2>\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"min-w-full divide-y divide-gray-200\">\r\n                <thead className=\"bg-gray-50\">\r\n                  <tr>\r\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">LOC</th>\r\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Count</th>\r\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Avg. Allowed Amount</th>\r\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Min Amount</th>\r\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Max Amount</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                  {metrics.map(metric => <tr key={metric.id}>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">{metric.LOC}</td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{metric.countOfObservation}</td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">${metric.averageAllowedAmount.toFixed(2)}</td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">${metric.minAllowedAmount.toFixed(2)}</td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">${metric.maxAllowedAmount.toFixed(2)}</td>\r\n                    </tr>)}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>}\r\n      </div>\r\n    </Layout>;\n}\n_s(CalculateMetrics, \"v0eqU1zCFVNumqMFwPzGGrq1jBM=\", false, function () {\n  return [useLoaderData];\n});\n_c = CalculateMetrics;\nvar _c;\n$RefreshReg$(_c, \"CalculateMetrics\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
