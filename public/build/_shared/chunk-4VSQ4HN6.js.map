{
  "version": 3,
  "sources": ["empty-module:~/services/dataService.server", "../../../app/components/DashboardFilters.tsx"],
  "sourcesContent": ["module.exports = {};", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\components\\\\\\\\DashboardFilters.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\components\\\\DashboardFilters.tsx\");\n  import.meta.hot.lastModified = \"1742557068294.3628\";\n}\n// REMIX HMR END\n\nimport { useEffect } from \"react\";\nexport default function DashboardFilters({\n  filterOptions,\n  currentFilters,\n  onFilterChange\n}) {\n  _s();\n  // Add debugging effect to log when filter options change\n  useEffect(() => {\n    console.log(\"DashboardFilters component received filter options:\", {\n      levelOfCare: filterOptions.levelOfCare?.length || 0,\n      payer: filterOptions.payer?.length || 0,\n      payerClass: filterOptions.payerClass?.length || 0,\n      stateTreatedAt: filterOptions.stateTreatedAt?.length || 0,\n      serviceYears: filterOptions.serviceYears?.length || 0,\n      paymentYears: filterOptions.paymentYears?.length || 0\n    });\n  }, [filterOptions]);\n\n  // Sort LOC options to ensure specific order: DTX, RTC, PHP, IOP\n  const sortedLOCOptions = [...(filterOptions.levelOfCare || [])];\n  const locOrder = ['DTX', 'RTC', 'PHP', 'IOP'];\n  sortedLOCOptions.sort((a, b) => {\n    const indexA = locOrder.indexOf(a);\n    const indexB = locOrder.indexOf(b);\n    // If both are in the order list, sort by the order\n    if (indexA !== -1 && indexB !== -1) {\n      return indexA - indexB;\n    }\n    // If only a is in the order list, it comes first\n    if (indexA !== -1) return -1;\n    // If only b is in the order list, it comes first\n    if (indexB !== -1) return 1;\n    // If neither are in the order list, sort alphabetically\n    return a.localeCompare(b);\n  });\n  const handleResetFilters = () => {\n    console.log(\"Resetting all filters\");\n    onFilterChange(\"levelOfCare\", null);\n    onFilterChange(\"payer\", null);\n    onFilterChange(\"payerClass\", null);\n    onFilterChange(\"stateTreatedAt\", null);\n    onFilterChange(\"serviceYear\", null);\n    onFilterChange(\"paymentYear\", null);\n  };\n\n  // Count active filters\n  const activeFilterCount = Object.values(currentFilters).filter(v => v !== null).length;\n  return <div className=\"bg-white rounded-lg shadow mb-6 p-4\">\r\n      <div className=\"mb-4 flex items-center justify-between\">\r\n        <h2 className=\"text-lg font-medium text-gray-900\">Dashboard Filters</h2>\r\n        {activeFilterCount > 0 && <button type=\"button\" onClick={handleResetFilters} className=\"flex items-center px-3 py-1.5 text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\">\r\n            <svg className=\"h-4 w-4 mr-1.5\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n            </svg>\r\n            Reset Filters ({activeFilterCount})\r\n          </button>}\r\n      </div>\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n        {/* Level of Care Filter */}\r\n        <div>\r\n          <label htmlFor=\"levelOfCare\" className=\"block text-sm font-medium text-gray-700\">\r\n            Level of Care\r\n          </label>\r\n          <select id=\"levelOfCare\" className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500 sm:text-sm\" value={currentFilters.levelOfCare || \"\"} onChange={e => {\n          const value = e.target.value || null;\n          console.log(`Changed levelOfCare filter to: ${value}`);\n          onFilterChange(\"levelOfCare\", value);\n        }}>\r\n            <option value=\"\">All</option>\r\n            {sortedLOCOptions.map(loc => <option key={loc} value={loc}>\r\n                {loc}\r\n              </option>)}\r\n          </select>\r\n        </div>\r\n        \r\n        {/* Payer Filter */}\r\n        <div>\r\n          <label htmlFor=\"payer\" className=\"block text-sm font-medium text-gray-700\">\r\n            Payer\r\n          </label>\r\n          <select id=\"payer\" className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500 sm:text-sm\" value={currentFilters.payer || \"\"} onChange={e => {\n          const value = e.target.value || null;\n          console.log(`Changed payer filter to: ${value}`);\n          onFilterChange(\"payer\", value);\n        }}>\r\n            <option value=\"\">All</option>\r\n            {Array.isArray(filterOptions.payer) && filterOptions.payer.map(payer => <option key={payer} value={payer}>\r\n                {payer}\r\n              </option>)}\r\n          </select>\r\n        </div>\r\n        \r\n        {/* Payer Class Filter */}\r\n        {Array.isArray(filterOptions.payerClass) && filterOptions.payerClass.length > 0 && <div>\r\n            <label htmlFor=\"payerClass\" className=\"block text-sm font-medium text-gray-700\">\r\n              Payer Class\r\n            </label>\r\n            <select id=\"payerClass\" className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500 sm:text-sm\" value={currentFilters.payerClass || \"\"} onChange={e => {\n          const value = e.target.value || null;\n          console.log(`Changed payerClass filter to: ${value}`);\n          onFilterChange(\"payerClass\", value);\n        }}>\r\n              <option value=\"\">All</option>\r\n              {filterOptions.payerClass.map(cls => <option key={cls} value={cls}>\r\n                  {cls}\r\n                </option>)}\r\n            </select>\r\n          </div>}\r\n        \r\n        {/* State Treated At Filter */}\r\n        <div>\r\n          <label htmlFor=\"stateTreatedAt\" className=\"block text-sm font-medium text-gray-700\">\r\n            State Treated At\r\n          </label>\r\n          <select id=\"stateTreatedAt\" className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500 sm:text-sm\" value={currentFilters.stateTreatedAt || \"\"} onChange={e => {\n          const value = e.target.value || null;\n          console.log(`Changed stateTreatedAt filter to: ${value}`);\n          onFilterChange(\"stateTreatedAt\", value);\n        }}>\r\n            <option value=\"\">All</option>\r\n            {Array.isArray(filterOptions.stateTreatedAt) && filterOptions.stateTreatedAt.map(state => <option key={state} value={state}>\r\n                {state}\r\n              </option>)}\r\n          </select>\r\n        </div>\r\n        \r\n        {/* Service Year Filter */}\r\n        <div>\r\n          <label htmlFor=\"serviceYear\" className=\"block text-sm font-medium text-gray-700\">\r\n            Service Year\r\n          </label>\r\n          <select id=\"serviceYear\" className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500 sm:text-sm\" value={currentFilters.serviceYear || \"\"} onChange={e => {\n          const value = e.target.value ? parseInt(e.target.value) : null;\n          console.log(`Changed serviceYear filter to: ${value}`);\n          onFilterChange(\"serviceYear\", value);\n        }}>\r\n            <option value=\"\">All</option>\r\n            {Array.isArray(filterOptions.serviceYears) && filterOptions.serviceYears.map(year => <option key={year} value={year}>\r\n                {year}\r\n              </option>)}\r\n          </select>\r\n        </div>\r\n        \r\n        {/* Payment Year Filter */}\r\n        <div>\r\n          <label htmlFor=\"paymentYear\" className=\"block text-sm font-medium text-gray-700\">\r\n            Payment Year\r\n          </label>\r\n          <select id=\"paymentYear\" className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500 sm:text-sm\" value={currentFilters.paymentYear || \"\"} onChange={e => {\n          const value = e.target.value ? parseInt(e.target.value) : null;\n          console.log(`Changed paymentYear filter to: ${value}`);\n          onFilterChange(\"paymentYear\", value);\n        }}>\r\n            <option value=\"\">All</option>\r\n            {Array.isArray(filterOptions.paymentYears) && filterOptions.paymentYears.map(year => <option key={year} value={year}>\r\n                {year}\r\n              </option>)}\r\n          </select>\r\n        </div>\r\n      </div>\r\n    </div>;\n}\n_s(DashboardFilters, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = DashboardFilters;\nvar _c;\n$RefreshReg$(_c, \"DashboardFilters\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
