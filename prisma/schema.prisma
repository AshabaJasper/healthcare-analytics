generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Revenue model
model ClaimRecord {
  id                    Int       @id @default(autoincrement())
  // Fields directly from DemoData.xlsx
  practiceName          String?   // Maps to "Practice Name"
  chargeCPTCode         String?   // Maps to "Charge CPT Code" 
  revenueCode           Int?      // Maps to "Revenue Code"
  LOC                   String?   // Maps to "LOC" in DemoData - Maps to levelOfCare in frontend
  chargeAmount          Float?    // Maps to "Charge Amount"
  paymentAllowedAmount  Float?    // Maps to "Payment Allowed Amount"
  primaryGroupNum       String?   // Maps to "Primary Group #" - Converted to String
  claimPrimaryMemberID  String?   // Maps to "Primary Payer Member ID" in your Excel
  payerName             String?   // Maps to "Payer Name" - Maps to payer in frontend
  payerGroup            String?   // Maps to "Payer Group" - Maps to payerClass in frontend
  paymentTotalPaid      Float?    // Maps to "Payment Total Paid"
  paymentReceived       DateTime? // Maps to "Payment Received" - Used for paymentYear
  paymentEntered        DateTime? // Maps to "Payment Entered"
  chargeFromDate        DateTime? // Maps to "Charge From Date" - Used for serviceYear
  chargeToDate          DateTime? // Maps to "Charge To Date"
  primaryInsZip         String?   // Maps to "Primary Ins Zip" - Converted to String
  primaryInsCity        String?   // Maps to "Primary Ins City"
  primaryInsState       String?   // Maps to "Primary Ins State" - Maps to stateTreatedAt in frontend
  primaryInsAddr1       String?   // Maps to "Primary Ins Addr 1"
  patientZip            String?   // Maps to "Patient Zip" - Converted to String
  patientCity           String?   // Maps to "Patient City"
  patientState          String?   // Maps to "Patient State"
  patientAddress1       String?   // Maps to "Patient Address 1"
  
  // We're keeping these fields, but ensure consistent naming with CalculatedMetrics
  // Mapping clearly documented to avoid confusion
  payerClass            String?   // Same as payerGroup, kept for compatibility
  employerName          String?   // Derived from "Primary Group #"
  prefix                String?   // Generated/derived field
  group                 String?   // Generated/derived field
  policyHolderState     String?   // Same as primaryInsState, kept for compatibility
  
  // Derived temporal fields (for filtering/grouping)
  serviceYear           Int?      // Year extracted from "Charge From Date"
  paymentReceivedYear   Int?      // Year extracted from "Payment Received"
  
  // Standard timestamps
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt

  // Define indexes for better query performance
  @@index([LOC])
  @@index([patientState])
  @@index([primaryInsState])
  @@index([payerName])
  @@index([payerGroup])
  @@index([payerClass])  // Add index for the duplicate field
  @@index([policyHolderState]) // Add index for the duplicate field
  @@index([paymentReceived])
  @@index([chargeFromDate])
  @@index([paymentTotalPaid])
  @@index([paymentAllowedAmount])
  @@index([serviceYear])
  @@index([paymentReceivedYear])
}

model CalculatedMetrics {
  id                     Int      @id @default(autoincrement())
  // Core fields from Rev Model metrics
  LOC                    String   // Maps to "LOC" in both Rev Model and DemoData
  countOfObservation     Int      // Maps to "Count of observation" in Rev Model
  
  // Metrics calculations
  averageAllowedAmount   Float    // Maps to "Average Allowed amount" in Rev Model
  minAllowedAmount       Float    // Maps to "Min Allowed Amount" in Rev Model
  maxAllowedAmount       Float    // Maps to "Max Allowed Amount" in Rev Model
  medianAllowedAmount    Float    // Maps to "Median Allowed Amount" in Rev Model
  modeAllowedAmount      Float    // Maps to "Mode Allowed Amount" in Rev Model
  
  // Filter dimensions from Rev Model - ensure naming matches with ClaimRecord
  // for consistent filtering across tables
  stateTreatedAt        String  @default("") // Maps to primaryInsState in ClaimRecord
  payerName             String  @default("") // Same as in ClaimRecord
  payerClass            String  @default("") // Maps to payerGroup in ClaimRecord
  employerName          String  @default("") // Same as in ClaimRecord
  prefix                String  @default("") // Same as in ClaimRecord
  group                 String  @default("") // Same as in ClaimRecord
  policyHolderState     String  @default("") // Same as in ClaimRecord (duplicate of primaryInsState)
  
  // Temporal dimensions - ensure naming matches with ClaimRecord
  dateOfServiceYear     Int     @default(0) // Maps to serviceYear in ClaimRecord
  paymentReceivedYear   Int     @default(0) // Maps to paymentReceivedYear in ClaimRecord
  
  // Additional value metrics
  allowedAmount         Float?   // Maps to "Allowed amount" - aggregated from ClaimRecord.paymentAllowedAmount
  insurancePayment      Float?   // Maps to "Insurance payment" - aggregated from ClaimRecord.paymentTotalPaid
  
  // Standard timestamps
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  // Unique constraint to prevent duplicate metrics for the same filter combination
  @@unique([LOC, stateTreatedAt, payerName, payerClass, employerName, prefix, group, policyHolderState, dateOfServiceYear, paymentReceivedYear], name: "calculated_metrics_unique_filters")
  
  // Define indexes for commonly queried fields
  @@index([LOC])
  @@index([payerName])
  @@index([payerClass])
  @@index([stateTreatedAt])
  @@index([policyHolderState])
  @@index([dateOfServiceYear])
  @@index([paymentReceivedYear])
}

model ProjectAllowedAmount {
  id                    Int       @id @default(autoincrement())
  payerGroup            String    
  LOC                   String    
  countOfObservation    Int       
  averageAllowedAmount  Float     
  maxAllowedAmount      Float     
  medianAllowedAmount   Float     
  modeAllowedAmount     Float     
  
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt

  @@unique([payerGroup, LOC])  // Updated unique constraint
  @@index([payerGroup])        // Updated index
  @@index([LOC])
}